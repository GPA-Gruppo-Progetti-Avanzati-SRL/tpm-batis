package {{ .Schema.PackageName }}

import (
{{range $pkg := .GoPackageImports "criteria" }}
   "{{$pkg}}"
{{- end}}
	"github.com/GPA-Gruppo-Progetti-Avanzati-SRL/tpm-batis/sqlmapper"
)

/*
 * Criteria
 */
type FilterBuilder struct {
	fb *sqlmapper.FilterBuilder
}

func NewFilterBuilder() *FilterBuilder {
	return &FilterBuilder{fb: &sqlmapper.FilterBuilder{}}
}

func (ub *FilterBuilder) OrderBy(ob string) *FilterBuilder {
	ub.fb.OrderBy(ob)
	return ub
}

func (ub *FilterBuilder) Or() *FilterBuilder {
	ub.fb.Or()
	return ub
}

func (ub *FilterBuilder) Build() sqlmapper.Filter {
	return ub.fb.Build()
}


{{- range $a := .Attributes}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "string") }}
{{ template "criteria-string" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "int") }}
{{ template "criteria-int" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "bool") }}
{{ template "criteria-bool" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "time") }}
{{ template "criteria-time" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "nullable-string") }}
{{ template "criteria-nullable-string" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "nullable-int") }}
{{ template "criteria-nullable-int" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "nullable-bool") }}
{{ template "criteria-nullable-bool" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- if and $a.GetDefinition.WithCriterion (eq $a.GetDefinition.Typ "nullable-time") }}
{{ template "criteria-nullable-time" filterSubTemplateContext $a "*" }}
{{- end -}}
{{- end -}}




